This is meant to be a general outline of some basic codestyling guidlines for UberTapp.

1. Spaces > Tabs:
    All "tabs" should be four spaces. Do not use tabs!
  
2. Open Curly Braces '{' on Same Line

    Class Example {
        public Example() {
            if(1) {
                try {
                    //try stuff
                } catch (e) {
                    //throw stuff (maybe)
                }
            } else if(2) {
                //do other stuff
            } else {
                //do some even more othery stuff
            }
        }
    }

3. If you have multiple conditions that are quite long, move to a new line, but put the logical operator on the next line. Same goes for 
  string contatenation
  
    if (this.getThing().getStuff().toString().Equals(other.getThing().getStuff().toString()
        && aThirdThing.getStuff() == soeStuff) {
        //do something
    }
      
  String this = "asfasdfeasdfasdf" + that.toString() + "asdfasdfkjbjhbjhwbejrskjdhfkjhsdkjfh" 
                + "nskjdhfiuhihkjhskjdfhuiw" + these.getThing2(thing1).toString();

4. Make the code more readable by naming with full names or shortened names which are still easily readable. Ie:
	- default_c    	=> 	default_cost 
	- default_rid	=> 	default_riderId

5. Give thought to naming variables. They don't have to be elaborate but they should be descriptive enough to make sense in their context. Ie:
	- private ArrayList<Driver> list 	
			=> private ArrayList<Driver> driverList/ currentDrivers/ acceptedDrivers

6 Naming convention is lower case word first followed by capitalized first letter of any following words.
	- private String thisIsAString;

7 If you are declaring contant variables that aren't going to change, capitalize the words and seperate them with underscores:
	- private final String THIS_STRING_WONT_CHANGE;

    
